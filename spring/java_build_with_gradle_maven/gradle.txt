빌드 방법과 기본적인 구성 및 작동 순서 방식 등.
maven과 비교할 수 있는 기준들 위주로 학습
빌드 코드가 더 효율적인가?
구성은 어떻게 다른가?
작동 순서는 어떠한가?
https://sharplee7.tistory.com/6
gradle은 groovy로 개발돼 자바 개발자들에게 익숙한 빌드 도구이다.
구글 안드로이드 사용자를 중심으로 최근 사용자가 많아지고 있다.
자바 초창기 유명한 빌드 도구는 ant였지만 ant가 배우기 쉽고 사용하기 쉽지만
라이브러리 레파지토리 관리 기능이 없어 maven이 그 자리를 대체했습니다.
그러나 xml기반의 maven은 설치, 설정 등의 절차가 까다로워 점점 더 많은 사용자들이 gradle로 옮겨가는 추세이다.
gradle 파일 이해
gradle은 java, groovy, scala, maven 빌드를 지원한다.
프로젝트 폴더를 만들고
프로젝트를 초기화하고
build.gradle을 수정한다./

1.gradle init = gradle 기초 셋업
2.build.gradle 생성됨. apply plugin: 'java' 추가
3.gradle build ->build 폴더 생성 컴파일된 파일이 있는 classes 폴더에 저장됨.
테스트 보고서 reports 폴더에 생성, libs에 조립된 프로젝트 라이브러리 생성.

종속성 선언
간단한 Hello World 샘플은 완전히 독립적이며 추가 라이브러리에 의존하지 않습니다. 
그러나 대부분의 응용 프로그램은 공통 및/또는 복잡한 기능을 처리하기 위해 외부 라이브러리에 의존합니다.
예를 들어, "Hello World!"라고 말하는 것 외에도 애플리케이션이 현재 날짜와 시간을 인쇄하기를 원한다고 가정합니다. 
기본 Java 라이브러리에서 날짜 및 시간 기능을 사용할 수 있지만 Joda Time 라이브러리를 사용하여 더 흥미롭게 만들 수 있습니다.
여기 HelloWorld에서는 Joda Time의 LocalTime클래스를 사용하여 현재 시간을 가져오고 인쇄합니다.
지금 프로젝트를 빌드하기 위해 실행했다면 gradle build빌드에서 Joda Time을 컴파일 종속성으로 선언하지 않았기 때문에 빌드가 실패합니다.
우선 타사 라이브러리에 대한 소스를 추가해야 합니다.

